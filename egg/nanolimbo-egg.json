{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2025-06-20T10:16:41+07:00",
    "name": "NanoLimbo",
    "author": "admin@vanes430.my.id",
    "description": "NanoLimbo Server",
    "features": [
        "eula",
        "java_version",
        "pid_limit"
    ],
    "docker_images": {
        "Java 21": "ghcr.io\/vanes430\/image:java-21-zulu"
    },
    "file_denylist": [],
    "startup": "java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JAR}}",
    "config": {
        "files": "{\r\n    \"settings.yml\": {\r\n        \"parser\": \"yaml\",\r\n        \"find\": {\r\n            \"bind.ip\": \"0.0.0.0\",\r\n            \"bind.port\": \"{{server.build.default.port}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Server started on\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# NanoLimbo Installer \u2014 cek wget\/jq, backup, download settings.yml & settings-example.yml\r\n\r\n# 1. Cek wget dan jq\r\nif ! command -v wget >\/dev\/null 2>&1 || ! command -v jq >\/dev\/null 2>&1; then\r\n  apt update\r\n  if ! command -v wget >\/dev\/null 2>&1; then\r\n    apt install -y wget\r\n  fi\r\n  if ! command -v jq >\/dev\/null 2>&1; then\r\n    apt install -y jq\r\n  fi\r\n  apt clean\r\nfi\r\n\r\n# 2. Pindah ke direktori server\r\ncd \/mnt\/server\r\n\r\n# 3. Download settings.yml jika belum ada\r\nif [ ! -f \"settings.yml\" ]; then\r\n  echo \"settings.yml tidak ditemukan, mendownload...\"\r\n  wget -O settings.yml \"https:\/\/github.com\/BoomEaro\/NanoLimbo\/raw\/refs\/heads\/main\/src\/main\/resources\/settings.yml\"\r\n  echo \"settings.yml berhasil didownload.\"\r\nelse\r\n  echo \"settings.yml sudah ada, skip download.\"\r\nfi\r\n\r\n# 4. SELALU download settings-example.yml (backup restore)\r\nwget -O settings-example.yml \"https:\/\/github.com\/BoomEaro\/NanoLimbo\/raw\/refs\/heads\/main\/src\/main\/resources\/settings.yml\"\r\necho \"settings-example.yml berhasil didownload (selalu overwrite versi terbaru).\"\r\n\r\n# 5. Tentukan nama file output NanoLimbo jar\r\nOUT_JAR=\"${SERVER_JAR:-nanolimbo.jar}\"\r\nOLD_JAR=\"${OUT_JAR}.old\"\r\n\r\n# 6. Backup file lama jika ada\r\nif [ -f \"$OUT_JAR\" ]; then\r\n  if [ -f \"$OLD_JAR\" ]; then\r\n    rm -f \"$OLD_JAR\"\r\n  fi\r\n  mv \"$OUT_JAR\" \"$OLD_JAR\"\r\n  echo \"Backup: $OUT_JAR -> $OLD_JAR\"\r\nfi\r\n\r\n# 7. Download NanoLimbo .jar terbaru dari GitHub Release\r\nNANOLIMBO_API_URL=\"https:\/\/api.github.com\/repos\/BoomEaro\/NanoLimbo\/releases\/latest\"\r\nNANOLIMBO_JAR_URL=$(wget -qO- \"$NANOLIMBO_API_URL\" | jq -r '.assets[] | select(.name | endswith(\".jar\")) | .browser_download_url' | head -n1)\r\n\r\nif [ -n \"$NANOLIMBO_JAR_URL\" ]; then\r\n  wget -O \"$OUT_JAR\" \"$NANOLIMBO_JAR_URL\"\r\n  echo \"Downloaded NanoLimbo as: $(realpath \"$OUT_JAR\")\"\r\nelse\r\n  echo \"Failed to find NanoLimbo .jar in the latest release!\"\r\n  exit 1\r\nfi",
            "container": "ghcr.io\/parkervcp\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Server jar File",
            "description": "The name of the server jarfile to run the server with.",
            "env_variable": "SERVER_JAR",
            "default_value": "nanolimbo.jar",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|regex:\/^([\\w\\d._-]+)(\\.jar)$\/",
            "field_type": "text"
        }
    ]
}